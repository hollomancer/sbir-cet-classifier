name: CI - Python (3.11)

# CI workflow for running tests and checks on Python 3.11.
# - Runs unit tests with pytest
# - Installs dev dependencies (prefers editable install where available)
# - Runs linters/type checks (best-effort)
# - Uses a simple pip cache for speed

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

concurrency:
  group: ci-python-3.11
  cancel-in-progress: true

permissions:
  contents: read

env:
  PYTHONUNBUFFERED: 1

jobs:
  test:
    name: Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-v1
          restore-keys: |
            pip-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install project & dev dependencies (best-effort)
        run: |
          set -e
          # Try editable dev install (best-effort). If it fails, continue and try fallbacks.
          pip install -e ".[dev]" || true
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            # Ensure pytest exists so subsequent steps can run
            pip install pytest
          fi

      - name: Show Python / Pip versions
        run: |
          python --version
          pip --version
          pip list --format=columns

      - name: Lint (ruff) - best-effort
        continue-on-error: true
        run: |
          # Run ruff if it's available in the environment
          if command -v ruff >/dev/null 2>&1; then
            ruff check .
          else
            echo "ruff not installed; skipping"
          fi

      - name: Type check (mypy) - best-effort
        continue-on-error: true
        run: |
          if command -v mypy >/dev/null 2>&1; then
            mypy src tests || true
          else
            echo "mypy not installed; skipping"
          fi

      - name: Run tests
        env:
          PYTEST_ADDOPTS: "-q --maxfail=1"
        run: |
          pytest tests/ -q

      - name: Upload test artifacts (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-logs
          path: |
            .pytest_cache
            htmlcov || true
